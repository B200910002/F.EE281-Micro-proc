
Lab_5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000478  0000050c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000478  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800112  00800112  0000051e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000051e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000550  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  0000058c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b2c  00000000  00000000  000005cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000087b  00000000  00000000  000010f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000044c  00000000  00000000  00001973  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000ac  00000000  00000000  00001dc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000481  00000000  00000000  00001e6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000037b  00000000  00000000  000022ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00002668  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	92 c1       	rjmp	.+804    	; 0x33a <__vector_5>
  16:	00 00       	nop
  18:	c7 c1       	rjmp	.+910    	; 0x3a8 <__vector_6>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e7       	ldi	r30, 0x78	; 120
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 31       	cpi	r26, 0x12	; 18
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e1       	ldi	r26, 0x12	; 18
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 31       	cpi	r26, 0x16	; 22
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	98 d0       	rcall	.+304    	; 0x1f4 <main>
  c4:	d7 c1       	rjmp	.+942    	; 0x474 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <init_stopwatch>:
		}
	}
}
void init_stopwatch(void)
{
	DDRC=0xff;	 	 	 // LED output
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	84 bb       	out	0x14, r24	; 20
	DDRG=0x0f;	 	 	 // segment common output
  cc:	8f e0       	ldi	r24, 0x0F	; 15
  ce:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	DDRE=0x00;	 	 	 // interrupt input
  d2:	12 b8       	out	0x02, r1	; 2
	SREG |=0x80;	 	 	 // Global Interrupt Enable=1;
  d4:	8f b7       	in	r24, 0x3f	; 63
  d6:	80 68       	ori	r24, 0x80	; 128
  d8:	8f bf       	out	0x3f, r24	; 63
	EIMSK=0x30;	 	 	 // INT4, INT5 enabled
  da:	80 e3       	ldi	r24, 0x30	; 48
  dc:	89 bf       	out	0x39, r24	; 57
	EICRB=0x0a;	 	 	 // interrupt trigger mode LOW
  de:	8a e0       	ldi	r24, 0x0A	; 10
  e0:	8a bf       	out	0x3a, r24	; 58
  e2:	08 95       	ret

000000e4 <display_fnd>:
}
void display_fnd(int count_data)
{
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	cd b7       	in	r28, 0x3d	; 61
  ea:	de b7       	in	r29, 0x3e	; 62
  ec:	28 97       	sbiw	r28, 0x08	; 8
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	f8 94       	cli
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	0f be       	out	0x3f, r0	; 63
  f6:	cd bf       	out	0x3d, r28	; 61
  f8:	fc 01       	movw	r30, r24
	int i, num[4];
	num[1]=(count_data/1000)%10;
  fa:	68 ee       	ldi	r22, 0xE8	; 232
  fc:	73 e0       	ldi	r23, 0x03	; 3
  fe:	93 d1       	rcall	.+806    	; 0x426 <__divmodhi4>
 100:	cb 01       	movw	r24, r22
 102:	2a e0       	ldi	r18, 0x0A	; 10
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	b9 01       	movw	r22, r18
 108:	8e d1       	rcall	.+796    	; 0x426 <__divmodhi4>
 10a:	9c 83       	std	Y+4, r25	; 0x04
 10c:	8b 83       	std	Y+3, r24	; 0x03
	num[0]=(count_data/100)%10;
 10e:	cf 01       	movw	r24, r30
 110:	64 e6       	ldi	r22, 0x64	; 100
 112:	70 e0       	ldi	r23, 0x00	; 0
 114:	88 d1       	rcall	.+784    	; 0x426 <__divmodhi4>
 116:	cb 01       	movw	r24, r22
 118:	b9 01       	movw	r22, r18
 11a:	85 d1       	rcall	.+778    	; 0x426 <__divmodhi4>
 11c:	9a 83       	std	Y+2, r25	; 0x02
 11e:	89 83       	std	Y+1, r24	; 0x01
	if(cur_time < 0){
 120:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 124:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 128:	99 23       	and	r25, r25
 12a:	4c f1       	brlt	.+82     	; 0x17e <display_fnd+0x9a>
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	55 c0       	rjmp	.+170    	; 0x1dc <display_fnd+0xf8>
		for (i=0;i<2;i++)
		{
			if(i == 1){
 132:	81 30       	cpi	r24, 0x01	; 1
 134:	91 05       	cpc	r25, r1
 136:	19 f4       	brne	.+6      	; 0x13e <display_fnd+0x5a>
				PORTC=0x40;
 138:	20 e4       	ldi	r18, 0x40	; 64
 13a:	25 bb       	out	0x15, r18	; 21
 13c:	06 c0       	rjmp	.+12     	; 0x14a <display_fnd+0x66>
			}
			else{
				PORTC=digit[num[0]];
 13e:	e9 81       	ldd	r30, Y+1	; 0x01
 140:	fa 81       	ldd	r31, Y+2	; 0x02
 142:	ec 5f       	subi	r30, 0xFC	; 252
 144:	fe 4f       	sbci	r31, 0xFE	; 254
 146:	20 81       	ld	r18, Z
 148:	25 bb       	out	0x15, r18	; 21
			}
			PORTG=fond_sel[i+1];
 14a:	9c 01       	movw	r18, r24
 14c:	2f 5f       	subi	r18, 0xFF	; 255
 14e:	3f 4f       	sbci	r19, 0xFF	; 255
 150:	f9 01       	movw	r30, r18
 152:	e0 50       	subi	r30, 0x00	; 0
 154:	ff 4f       	sbci	r31, 0xFF	; 255
 156:	90 81       	ld	r25, Z
 158:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
			if (i%2)
 15c:	80 ff       	sbrs	r24, 0
 15e:	07 c0       	rjmp	.+14     	; 0x16e <display_fnd+0x8a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 160:	8f e3       	ldi	r24, 0x3F	; 63
 162:	9f e1       	ldi	r25, 0x1F	; 31
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <display_fnd+0x80>
 168:	00 c0       	rjmp	.+0      	; 0x16a <display_fnd+0x86>
 16a:	00 00       	nop
 16c:	06 c0       	rjmp	.+12     	; 0x17a <display_fnd+0x96>
 16e:	8f ed       	ldi	r24, 0xDF	; 223
 170:	9e e2       	ldi	r25, 0x2E	; 46
 172:	01 97       	sbiw	r24, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <display_fnd+0x8e>
 176:	00 c0       	rjmp	.+0      	; 0x178 <display_fnd+0x94>
 178:	00 00       	nop
 17a:	c9 01       	movw	r24, r18
 17c:	02 c0       	rjmp	.+4      	; 0x182 <display_fnd+0x9e>
 17e:	80 e0       	ldi	r24, 0x00	; 0
 180:	90 e0       	ldi	r25, 0x00	; 0
{
	int i, num[4];
	num[1]=(count_data/1000)%10;
	num[0]=(count_data/100)%10;
	if(cur_time < 0){
		for (i=0;i<2;i++)
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	91 05       	cpc	r25, r1
 186:	ac f2       	brlt	.-86     	; 0x132 <display_fnd+0x4e>
 188:	2c c0       	rjmp	.+88     	; 0x1e2 <display_fnd+0xfe>
			else 	 _delay_ms(3);
		}
		}else{
		for (i=0;i<2;i++)
		{
			PORTC=digit[num[i]];
 18a:	fc 01       	movw	r30, r24
 18c:	ee 0f       	add	r30, r30
 18e:	ff 1f       	adc	r31, r31
 190:	21 e0       	ldi	r18, 0x01	; 1
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	2c 0f       	add	r18, r28
 196:	3d 1f       	adc	r19, r29
 198:	e2 0f       	add	r30, r18
 19a:	f3 1f       	adc	r31, r19
 19c:	01 90       	ld	r0, Z+
 19e:	f0 81       	ld	r31, Z
 1a0:	e0 2d       	mov	r30, r0
 1a2:	ec 5f       	subi	r30, 0xFC	; 252
 1a4:	fe 4f       	sbci	r31, 0xFE	; 254
 1a6:	20 81       	ld	r18, Z
 1a8:	25 bb       	out	0x15, r18	; 21
			PORTG=fond_sel[i+1];
 1aa:	9c 01       	movw	r18, r24
 1ac:	2f 5f       	subi	r18, 0xFF	; 255
 1ae:	3f 4f       	sbci	r19, 0xFF	; 255
 1b0:	f9 01       	movw	r30, r18
 1b2:	e0 50       	subi	r30, 0x00	; 0
 1b4:	ff 4f       	sbci	r31, 0xFF	; 255
 1b6:	90 81       	ld	r25, Z
 1b8:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
			if (i%2)
 1bc:	80 ff       	sbrs	r24, 0
 1be:	07 c0       	rjmp	.+14     	; 0x1ce <display_fnd+0xea>
 1c0:	8f e3       	ldi	r24, 0x3F	; 63
 1c2:	9f e1       	ldi	r25, 0x1F	; 31
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <display_fnd+0xe0>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <display_fnd+0xe6>
 1ca:	00 00       	nop
 1cc:	06 c0       	rjmp	.+12     	; 0x1da <display_fnd+0xf6>
 1ce:	8f ed       	ldi	r24, 0xDF	; 223
 1d0:	9e e2       	ldi	r25, 0x2E	; 46
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <display_fnd+0xee>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <display_fnd+0xf4>
 1d8:	00 00       	nop
 1da:	c9 01       	movw	r24, r18
			if (i%2)
			_delay_ms(2);
			else 	 _delay_ms(3);
		}
		}else{
		for (i=0;i<2;i++)
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	91 05       	cpc	r25, r1
 1e0:	a4 f2       	brlt	.-88     	; 0x18a <display_fnd+0xa6>
			_delay_ms(2);
			else 	 _delay_ms(3);
		}
	}
	
}
 1e2:	28 96       	adiw	r28, 0x08	; 8
 1e4:	0f b6       	in	r0, 0x3f	; 63
 1e6:	f8 94       	cli
 1e8:	de bf       	out	0x3e, r29	; 62
 1ea:	0f be       	out	0x3f, r0	; 63
 1ec:	cd bf       	out	0x3d, r28	; 61
 1ee:	df 91       	pop	r29
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <main>:
void init_stopwatch(void);	 //?????? ??????? ?????????? ?????
// ?????? ??????????? ???? ??????????
void display_fnd(int);
int main(void)
{
	init_stopwatch();
 1f4:	69 df       	rcall	.-302    	; 0xc8 <init_stopwatch>
	while (1)
	{
		if (state==IDLE)		 	 // IDLE ?????? ??????
 1f6:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 1fa:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 1fe:	89 2b       	or	r24, r25
 200:	91 f4       	brne	.+36     	; 0x226 <main+0x32>
		{
			if(cur_time < 0){
 202:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 206:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 20a:	99 23       	and	r25, r25
 20c:	34 f4       	brge	.+12     	; 0x21a <main+0x26>
				display_fnd(cur_time1);
 20e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <cur_time1>
 212:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <cur_time1+0x1>
 216:	66 df       	rcall	.-308    	; 0xe4 <display_fnd>
 218:	73 c0       	rjmp	.+230    	; 0x300 <main+0x10c>
			}
			else{
				display_fnd(cur_time);
 21a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 21e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 222:	60 df       	rcall	.-320    	; 0xe4 <display_fnd>
 224:	6d c0       	rjmp	.+218    	; 0x300 <main+0x10c>
			}
		}
		else
		{
			if(state == BACK){
 226:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 22a:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 22e:	03 97       	sbiw	r24, 0x03	; 3
 230:	a1 f5       	brne	.+104    	; 0x29a <main+0xa6>
				
				if(cur_time < 0){
 232:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 236:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 23a:	99 23       	and	r25, r25
 23c:	7c f4       	brge	.+30     	; 0x25c <main+0x68>
					display_fnd(cur_time1);
 23e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <cur_time1>
 242:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <cur_time1+0x1>
 246:	4e df       	rcall	.-356    	; 0xe4 <display_fnd>
					cur_time1++;
 248:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <cur_time1>
 24c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <cur_time1+0x1>
 250:	01 96       	adiw	r24, 0x01	; 1
 252:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <cur_time1+0x1>
 256:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <cur_time1>
 25a:	15 c0       	rjmp	.+42     	; 0x286 <main+0x92>
				}
				else if(cur_time == 0){
 25c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 260:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 264:	89 2b       	or	r24, r25
 266:	51 f4       	brne	.+20     	; 0x27c <main+0x88>
					cur_time--;
 268:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 26c:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 270:	01 97       	sbiw	r24, 0x01	; 1
 272:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <cur_time+0x1>
 276:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <cur_time>
 27a:	05 c0       	rjmp	.+10     	; 0x286 <main+0x92>
				}
				else {
					display_fnd(cur_time);
 27c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 280:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 284:	2f df       	rcall	.-418    	; 0xe4 <display_fnd>
				}
				cur_time--;
 286:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 28a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 28e:	01 97       	sbiw	r24, 0x01	; 1
 290:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <cur_time+0x1>
 294:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <cur_time>
 298:	33 c0       	rjmp	.+102    	; 0x300 <main+0x10c>
			}
			else
			{
				if(cur_time < 0){
 29a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 29e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 2a2:	99 23       	and	r25, r25
					display_fnd(cur_time1);
 2a4:	7c f4       	brge	.+30     	; 0x2c4 <main+0xd0>
 2a6:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <cur_time1>
 2aa:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <cur_time1+0x1>
 2ae:	1a df       	rcall	.-460    	; 0xe4 <display_fnd>
					cur_time1--;
 2b0:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <cur_time1>
 2b4:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <cur_time1+0x1>
 2b8:	01 97       	sbiw	r24, 0x01	; 1
 2ba:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <cur_time1+0x1>
 2be:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <cur_time1>
 2c2:	15 c0       	rjmp	.+42     	; 0x2ee <main+0xfa>
				}
				else if(cur_time == 0){
 2c4:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 2c8:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 2cc:	89 2b       	or	r24, r25
 2ce:	51 f4       	brne	.+20     	; 0x2e4 <main+0xf0>
					cur_time ++;
 2d0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 2d4:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 2d8:	01 96       	adiw	r24, 0x01	; 1
 2da:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <cur_time+0x1>
 2de:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <cur_time>
				}
				else {
					display_fnd(cur_time);
 2e2:	05 c0       	rjmp	.+10     	; 0x2ee <main+0xfa>
 2e4:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 2e8:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 2ec:	fb de       	rcall	.-522    	; 0xe4 <display_fnd>
				}
				cur_time++;
 2ee:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 2f2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 2f6:	01 96       	adiw	r24, 0x01	; 1
 2f8:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <cur_time+0x1>
 2fc:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <cur_time>
			}
		}
		if (cur_time==2300)	 	 	 // 99.99-??? ????????? ????
 300:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 304:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 308:	8c 3f       	cpi	r24, 0xFC	; 252
 30a:	98 40       	sbci	r25, 0x08	; 8
 30c:	39 f4       	brne	.+14     	; 0x31c <main+0x128>
		{
			state = BACK;  	 // 00.00 ?????.
 30e:	83 e0       	ldi	r24, 0x03	; 3
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 316:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 31a:	6d cf       	rjmp	.-294    	; 0x1f6 <main+0x2>
		}
		else if (cur_time==-300)	 	 	 // 99.99-??? ????????? ????
 31c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cur_time>
 320:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <cur_time+0x1>
 324:	84 3d       	cpi	r24, 0xD4	; 212
 326:	9e 4f       	sbci	r25, 0xFE	; 254
 328:	09 f0       	breq	.+2      	; 0x32c <main+0x138>
 32a:	65 cf       	rjmp	.-310    	; 0x1f6 <main+0x2>
		{
			state = GO;
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 334:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 338:	5e cf       	rjmp	.-324    	; 0x1f6 <main+0x2>

0000033a <__vector_5>:
		}
	}
	
}
ISR(INT4_vect)
{
 33a:	1f 92       	push	r1
 33c:	0f 92       	push	r0
 33e:	0f b6       	in	r0, 0x3f	; 63
 340:	0f 92       	push	r0
 342:	11 24       	eor	r1, r1
 344:	2f 93       	push	r18
 346:	8f 93       	push	r24
 348:	9f 93       	push	r25
 34a:	2f ef       	ldi	r18, 0xFF	; 255
 34c:	89 ef       	ldi	r24, 0xF9	; 249
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	21 50       	subi	r18, 0x01	; 1
 352:	80 40       	sbci	r24, 0x00	; 0
 354:	90 40       	sbci	r25, 0x00	; 0
 356:	e1 f7       	brne	.-8      	; 0x350 <__vector_5+0x16>
 358:	00 c0       	rjmp	.+0      	; 0x35a <__vector_5+0x20>
 35a:	00 00       	nop
	_delay_ms(20);
	EIFR|=1<<4;
 35c:	88 b7       	in	r24, 0x38	; 56
 35e:	80 61       	ori	r24, 0x10	; 16
 360:	88 bf       	out	0x38, r24	; 56
	if ((PINE&0x10)==0x10)
 362:	0c 99       	sbic	0x01, 4	; 1
 364:	19 c0       	rjmp	.+50     	; 0x398 <__vector_5+0x5e>
	{
		return;
	}
	if (state==GO)
 366:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 36a:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 36e:	01 97       	sbiw	r24, 0x01	; 1
 370:	39 f4       	brne	.+14     	; 0x380 <__vector_5+0x46>
	{
		state = BACK;
 372:	83 e0       	ldi	r24, 0x03	; 3
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 37a:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 37e:	0c c0       	rjmp	.+24     	; 0x398 <__vector_5+0x5e>
	}
	else if(state ==BACK)
 380:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 384:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 388:	03 97       	sbiw	r24, 0x03	; 3
 38a:	31 f4       	brne	.+12     	; 0x398 <__vector_5+0x5e>
	{
		state=GO;
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 394:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
	}
}
 398:	9f 91       	pop	r25
 39a:	8f 91       	pop	r24
 39c:	2f 91       	pop	r18
 39e:	0f 90       	pop	r0
 3a0:	0f be       	out	0x3f, r0	; 63
 3a2:	0f 90       	pop	r0
 3a4:	1f 90       	pop	r1
 3a6:	18 95       	reti

000003a8 <__vector_6>:
ISR(INT5_vect)
{
 3a8:	1f 92       	push	r1
 3aa:	0f 92       	push	r0
 3ac:	0f b6       	in	r0, 0x3f	; 63
 3ae:	0f 92       	push	r0
 3b0:	11 24       	eor	r1, r1
 3b2:	2f 93       	push	r18
 3b4:	8f 93       	push	r24
 3b6:	9f 93       	push	r25
 3b8:	2f ef       	ldi	r18, 0xFF	; 255
 3ba:	89 ef       	ldi	r24, 0xF9	; 249
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	21 50       	subi	r18, 0x01	; 1
 3c0:	80 40       	sbci	r24, 0x00	; 0
 3c2:	90 40       	sbci	r25, 0x00	; 0
 3c4:	e1 f7       	brne	.-8      	; 0x3be <__vector_6+0x16>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <__vector_6+0x20>
 3c8:	00 00       	nop
	_delay_ms(20);
	EIFR|=1<<5;
 3ca:	88 b7       	in	r24, 0x38	; 56
 3cc:	80 62       	ori	r24, 0x20	; 32
 3ce:	88 bf       	out	0x38, r24	; 56
	if ((PINE&0x20)==0x20)
 3d0:	0d 99       	sbic	0x01, 5	; 1
 3d2:	21 c0       	rjmp	.+66     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
	{
		return;
	}
	if (state==GO || state== BACK)
 3d4:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 3d8:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 3dc:	01 97       	sbiw	r24, 0x01	; 1
 3de:	31 f0       	breq	.+12     	; 0x3ec <__vector_6+0x44>
 3e0:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 3e4:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 3e8:	03 97       	sbiw	r24, 0x03	; 3
 3ea:	69 f4       	brne	.+26     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
	{
		state1 = state;
 3ec:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 3f0:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 3f4:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <state1+0x1>
 3f8:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <state1>
		state=IDLE;
 3fc:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <__data_end+0x1>
 400:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <__data_end>
 404:	08 c0       	rjmp	.+16     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
	}
	else
	{
		state=state1;
 406:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <state1>
 40a:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <state1+0x1>
 40e:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 412:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
	}
	
 416:	9f 91       	pop	r25
 418:	8f 91       	pop	r24
 41a:	2f 91       	pop	r18
 41c:	0f 90       	pop	r0
 41e:	0f be       	out	0x3f, r0	; 63
 420:	0f 90       	pop	r0
 422:	1f 90       	pop	r1
 424:	18 95       	reti

00000426 <__divmodhi4>:
 426:	97 fb       	bst	r25, 7
 428:	07 2e       	mov	r0, r23
 42a:	16 f4       	brtc	.+4      	; 0x430 <__divmodhi4+0xa>
 42c:	00 94       	com	r0
 42e:	06 d0       	rcall	.+12     	; 0x43c <__divmodhi4_neg1>
 430:	77 fd       	sbrc	r23, 7
 432:	08 d0       	rcall	.+16     	; 0x444 <__divmodhi4_neg2>
 434:	0b d0       	rcall	.+22     	; 0x44c <__udivmodhi4>
 436:	07 fc       	sbrc	r0, 7
 438:	05 d0       	rcall	.+10     	; 0x444 <__divmodhi4_neg2>
 43a:	3e f4       	brtc	.+14     	; 0x44a <__divmodhi4_exit>

0000043c <__divmodhi4_neg1>:
 43c:	90 95       	com	r25
 43e:	81 95       	neg	r24
 440:	9f 4f       	sbci	r25, 0xFF	; 255
 442:	08 95       	ret

00000444 <__divmodhi4_neg2>:
 444:	70 95       	com	r23
 446:	61 95       	neg	r22
 448:	7f 4f       	sbci	r23, 0xFF	; 255

0000044a <__divmodhi4_exit>:
 44a:	08 95       	ret

0000044c <__udivmodhi4>:
 44c:	aa 1b       	sub	r26, r26
 44e:	bb 1b       	sub	r27, r27
 450:	51 e1       	ldi	r21, 0x11	; 17
 452:	07 c0       	rjmp	.+14     	; 0x462 <__udivmodhi4_ep>

00000454 <__udivmodhi4_loop>:
 454:	aa 1f       	adc	r26, r26
 456:	bb 1f       	adc	r27, r27
 458:	a6 17       	cp	r26, r22
 45a:	b7 07       	cpc	r27, r23
 45c:	10 f0       	brcs	.+4      	; 0x462 <__udivmodhi4_ep>
 45e:	a6 1b       	sub	r26, r22
 460:	b7 0b       	sbc	r27, r23

00000462 <__udivmodhi4_ep>:
 462:	88 1f       	adc	r24, r24
 464:	99 1f       	adc	r25, r25
 466:	5a 95       	dec	r21
 468:	a9 f7       	brne	.-22     	; 0x454 <__udivmodhi4_loop>
 46a:	80 95       	com	r24
 46c:	90 95       	com	r25
 46e:	bc 01       	movw	r22, r24
 470:	cd 01       	movw	r24, r26
 472:	08 95       	ret

00000474 <_exit>:
 474:	f8 94       	cli

00000476 <__stop_program>:
 476:	ff cf       	rjmp	.-2      	; 0x476 <__stop_program>
